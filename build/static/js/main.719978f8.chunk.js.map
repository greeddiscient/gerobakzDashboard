{"version":3,"sources":["logo.svg","Login.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","loggingIn","usernameHandleChange","bind","assertThisInitialized","passwordHandleChange","handleSubmit","event","setState","target","value","that","preventDefault","console","log","axios","post","then","response","data","hasOwnProperty","alert","sessionStorage","setItem","history","push","catch","error","react_default","a","createElement","className","onSubmit","type","onChange","index_es","color","size","icon","spin","Component","Home","defineProperty","orders","loading","quantitySold","totalPrice","loggedIn","getItem","get","calculateStuff","rows","user","i","length","order","item","quantity","time","location","latitude","longitude","renderOrderRows","library","add","faSpinner","AppRouter","BrowserRouter","Link","to","Route","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.719978f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Login.css';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Login extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      username:'',\n      password:'',\n      loggingIn: false\n    }\n    this.usernameHandleChange=this.usernameHandleChange.bind(this)\n    this.passwordHandleChange=this.passwordHandleChange.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n  }\n  usernameHandleChange(event){\n    this.setState({username: event.target.value});\n  }\n  passwordHandleChange(event){\n    this.setState({password: event.target.value});\n  }\n  handleSubmit(event){\n    var that=this\n    this.setState({\n      loggingIn: true\n    })\n    event.preventDefault();\n    console.log(\"submitted\")\n    axios.post('https://gerobakz-api.herokuapp.com/api/login', {\n      username: this.state.username,\n      password: this.state.password\n    })\n    .then(function (response) {\n      if(response.data.hasOwnProperty('failed')){\n        alert('Login Failed - Check Username & Password');\n        that.setState({\n          loggingIn: false\n        })\n      }\n      else{\n        sessionStorage.setItem('loggedIn',true)\n        that.props.history.push('/')\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"login-form\">\n        <form onSubmit={this.handleSubmit}>\n          <label className=\"username-input\">\n            Username:\n            <input type=\"text\" value={this.state.username} onChange={this.usernameHandleChange} />\n          </label>\n          <label className=\"password-input\">\n            Password:\n            <input type=\"password\" value={this.state.password} onChange={this.passwordHandleChange} />\n          </label>\n          <div className= \"submit-button\">\n            {this.state.loggingIn ? <FontAwesomeIcon color=\"black\" size=\"l\" icon=\"spinner\" spin/>:<input className=\"submit-button\" type=\"submit\" value=\"Submit\" />}\n          </div>\n        </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Home.css';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport moment from 'moment'\n\n\nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      orders: [],\n      loading: true,\n      quantitySold: 0,\n      totalPrice: 0,\n      loading: true\n    }\n  }\n  componentWillMount(){\n    var loggedIn = sessionStorage.getItem('loggedIn')\n    if (loggedIn===null||loggedIn===false){\n      this.props.history.push('/login')\n    }\n    var that=this\n    axios.get('https://gerobakz-api.herokuapp.com/api/orders')\n    .then(function (response) {\n      // handle success\n      var data=response.data\n      that.setState({\n        orders: data,\n        loading: false\n      })\n      console.log(data)\n      that.calculateStuff()\n\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n  }\n  renderOrderRows(){\n    var rows=[]\n    var orders= this.state.orders\n    rows.push(<h1>{orders[0].user}</h1>)\n    for (var i=0;i<orders.length;i++){\n      rows.push(<p>Item: {orders[i].order[0].item}</p>)\n      rows.push(<p>Quantity: {orders[i].order[0].quantity}</p>)\n      rows.push(<p>Time: {orders[i].time}</p>)\n      rows.push(<p>Location: {orders[i].location.latitude} {orders[i].location.longitude}</p>)\n      rows.push(<p>Total Price: Rp{orders[i].totalPrice}</p>)\n    }\n    return rows\n  }\n\n  calculateStuff() {\n    var orders = this.state.orders\n    var quantitySold = 0\n    var totalPrice = 0\n    for (var i=0;i<orders.length;i++){\n      quantitySold = quantitySold + orders[i].order[0].quantity\n      totalPrice = totalPrice + orders[i].totalPrice\n    }\n    this.setState({\n      quantitySold: quantitySold,\n      totalPrice: totalPrice\n    })\n  }\n  render() {\n\n    return (\n      <div className=\"App\">\n\n      <h1>{this.state.loading ? <FontAwesomeIcon color=\"black\" size=\"l\" icon=\"spinner\" spin/>: this.state.orders[this.state.orders.length-1].time}</h1>\n\n      <table className=\"center\">\n        <tr>\n          <th>Item</th>\n          <th>Quantity Sold</th>\n          <th>Total Price</th>\n          <th>Incentive Value (%)</th>\n          <th>Incentive Amount</th>\n          <th>Amount to be Deposited</th>\n        </tr>\n        <tr>\n          <td>Nasi Goreng</td>\n          <td>{this.state.quantitySold}</td>\n          <td>{this.state.totalPrice}</td>\n          <td>5%</td>\n          <td>{0.05*this.state.totalPrice}</td>\n          <td>{this.state.totalPrice-0.05*this.state.totalPrice}</td>\n        </tr>\n        <tr>\n          <td>Water (600ml)</td>\n          <td>1</td>\n          <td>3,000</td>\n          <td>0%</td>\n          <td>0</td>\n          <td>3,000</td>\n        </tr>\n        <tr>\n          <td>Total</td>\n          <td>N/A</td>\n          <td>403,000</td>\n          <td>N/A</td>\n          <td>20,000</td>\n          <td>383,000</td>\n        </tr>\n      </table>\n\n        <h1>This is your year 2019</h1>\n        {this.state.loading ? <FontAwesomeIcon color=\"black\" size=\"l\" icon=\"spinner\" spin/>: this.renderOrderRows()}\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Login from \"./Login\"\nimport Home from \"./Home\"\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faSpinner)\n\nconst AppRouter = () => (\n  <Router>\n    <div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/login/\">Login</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/login/\" component={Login} />\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}